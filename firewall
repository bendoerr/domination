#! /usr/bin/env bash
#
# Use basic iptables and the blacklist from `https://www.openbl.org` to block
# off a chunk of the annoying internet.
#

################################################################################
# Script Behavior

# Bail on error
set -o errexit

# Declare variables first
set -o nounset

# Globbing
shopt -s extglob

# Debug Logging
# Trace Loggin, must be first argument
if [[ "${1:-}" == "--trace" ]]; then
    set -x
    shift
fi

################################################################################
# Variables

# Script Invocation Info
readonly SCRIPT_INVOKE="$0"
readonly SCRIPT_NAME=`basename "$0"`
readonly SCRIPT_ABS_PATH="$( readlink -m "$( [[ "${SCRIPT_INVOKE:0:1}" == "/" ]] \
    && dirname "$SCRIPT_INVOKE" \
    || dirname "$(pwd)/$SCRIPT_INVOKE" )" )"

readonly BL_FILE="$SCRIPT_ABS_PATH/ip.blacklist"
readonly BL_URL="https://www.openbl.org/lists/base.txt"
readonly BL_CHAIN="blacklist"

readonly IP_CHAIN="INPUT"
readonly IP_PROTO="tcp"
readonly IP_RETURN="RETURN"
readonly IP_BLOCK="REJECT"
readonly IP_BLOCK_MOD="--reject-with icmp-port-unreachable"

readonly IPTABLES_OPTS="--wait"


################################################################################
# Usage

function usage() {
    cat 1>&2 <<EOF
    $SCRIPT_NAME [--help]
    $SCRIPT_NAME [operations]

    OPERATIONS
    update                 Update "$BL_FILE" from "$BL_URL"

    setup                  Setup the "iptables" chain

    apply                  Apply the IPs in "$BL_FILE" to the "iptables" chain

    teardown               Remove the "iptables" chain

EOF
}



################################################################################
# Actions

function update_blacklist() {
    curl "$BL_URL" 2> /dev/null \
        | grep --invert-match "^#" \
        | sort --version-sort --unique \
        > "$BL_FILE"

    echo "Updated blacklist has $(wc -l < "$BL_FILE") IPs"
}

function setup_iptables() {
    iptables "$IPTABLES_OPTS" \
        --new-chain "$BL_CHAIN"

    iptables "$IPTABLES_OPTS" \
        --append "$BL_CHAIN" \
        --jump "$IP_RETURN"

    iptables "$IPTABLES_OPTS" \
        --insert "$IP_CHAIN" \
        --protocol "$IP_PROTO" \
        --jump "$BL_CHAIN"

    echo "Setup iptables with routing"
}

function teardown_iptables() {
    iptables "$IPTABLES_OPTS" \
        --delete "$IP_CHAIN"  \
        --protocol "$IP_PROTO" \
        --jump "$BL_CHAIN"

    iptables "$IPTABLES_OPTS" \
        --flush "$BL_CHAIN"

    iptables "$IPTABLES_OPTS" \
        --delete-chain "$BL_CHAIN"

    echo "Removed routing from iptables"
}

function apply_iptables_blacklist() {
    echo "Starting to apply blacklist"

    while read ip; do

        eval iptables "$IPTABLES_OPTS" \
            --insert "$BL_CHAIN" 1 \
            --source "$ip" \
            --jump "$IP_BLOCK" \
            "$IP_BLOCK_MOD"

    done < "$BL_FILE"

    echo "Finished applying blacklist"
}

################################################################################
# Run

if [ $# == 0 ]; then
    usage
    exit 1;
fi

while [[ $# > 0 ]]; do
    opt="$1"
    case $opt in
        update) update_blacklist ;;
        setup) setup_iptables ;;
        apply) apply_iptables_blacklist ;;
        teardown) teardown_iptables ;;
    esac
    shift
done

