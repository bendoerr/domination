#!/usr/bin/env ansible-playbook --ask-vault-pass
# vim:ft=ansible :
#
# Ansible playbook to update tripwire dabases from last report
#

---

- name: confirm changes and update tripwire database
  hosts: "{{ target | default('servers') }}"
  gather_facts: no

  tags:
    - tripwire
    - tripwire-confirm

  vars:
    tripwire_report_dir: /var/lib/tripwire/report/
    tripwire_run_report: "{{ run_report | default('no') }}"

  vars_files:
    - vars/secret.yml.vault
    - vars/tripwire.yml.vault

  roles:

    - role: find_port
      tags: always


  tasks:

    - name: run report
      become: yes
      command: tripwire --check --email-report
      when: tripwire_run_report | bool

    - name:         find the latest report
      become:       yes
      changed_when: false

      register:     report_file

      shell: >
          twrfile=$(ls -t {{ tripwire_report_dir }} | head -n 1);
          echo $twrfile;
          echo $twrfile
          | grep -oE "[0-9]{8}-[0-9]{6}"
          | xargs -0 python -c "from datetime import datetime; import sys; print datetime.strptime(sys.argv[1].rstrip(), '%Y%m%d-%H%M%S').strftime('%s')"


    - name:         check when the database was last update
      become:       yes
      changed_when: false

      register:     db_date

      shell: >
          twprint --print-dbfile
          | grep -oP "(?<=Database last updated on:     ).*$"
          | xargs -0 python -c "from datetime import datetime; import sys; u = datetime.strptime(sys.argv[1].rstrip(), '%a %d %b %Y %I:%M:%S %p %Z').strftime('%s') if 'Never' not in sys.argv[1] else '0'; print u"


    - name:    update tripwire database
      become:  yes

      when:    ( report_file.stdout_lines[1] | int ) > ( db_date.stdout_lines[0] | int )

      command: >
          tripwire --update
                   --accept-all
                   --twrfile {{ tripwire_report_dir }}{{ report_file.stdout_lines[0] }}
                   --local-passphrase "{{ tripwire_local_password }}"


